
/*
    ____ ____  ____  _   _   _  ____  __ ____
   / ___|  _ \| __ )| \ | | | |/ /  \/  |  _ \
  | |   | |_) |  _ \|  \| | | ' /| |\/| | |_) |
  | |___|  _ <| |_) | |\  | | . \| |  | |  __/
   \____|_| \_\____/|_| \_| |_|\_\_|  |_|_|

 */

/* BLANK LAYER
		blank {
			// -----------------------------------------------------------------------------------------
			// | 	--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|	
			// | 	--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|	
			// | 	--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|	
			// | 	--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|	
			bindings = <
				&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans
				&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans
				&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans
				&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans
			>;
		};
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LOWER 1
#define RAISE 2
#define QWERTY 3
#define ITHREE 4


/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
				// -----------------------------------------------------------------------------------------
				// | ESC   |  Q   		|  W   |  E   |  R   |  T   |   Y   	|  U    |  I   |  O   |   P   | BSPC  |
				// | CTRL  |  A   		|  S   |  D   |  F   |  G   |   H   	|  J    |  K   |  L   |   ;   |  '    |
				// | SHIFT |  Z   		|  X   |  C   |  V   |  B   |   N   	|  M    |  ,   |  .   |   /   |  RET  |
				// | CTRL  | NUMBERS 	| LGUI | LCTL | LALT |TH SPACE|TH BSPC| RETURN| LEFT | DOWN  |  UP | RIGHT
			bindings = <
				&kp ESC  		&kp Q    		&kp W 			&kp F 			&kp P 		&kp B  					&kp J   				&kp L  		&kp U    	&kp Y   	&kp SEMI    	&kp EQUAL
				&kp LCTRL  	&kp A    		&kp R 			&kp S 			&kp T 		&kp G  					&kp M   				&kp N  		&kp E    	&kp I   	&kp O 		&kp SQT
				&kp LSHFT 	&kp Z    		&kp X 			&kp C 			&kp D 		&kp V  					&kp K   				&kp H  		&kp COMMA &kp DOT 	&kp BSLH 	&kp RET
				&kp LCTRL  	&kp LGUI 	  &kp DELETE 	&mo ITHREE 	&kp LALT	&lt LOWER SPACE	&lt RAISE BSPC	&kp RET		&kp LEFT 	&kp DOWN 	&kp UP 		&kp RIGHT
			>;
		};

		lower {
			// -----------------------------------------------------------------------------------------
			// | TAB   |  %   		|  !   |  @   |  $   |  --  |   ` 	 |  7    |  8   |  9   |   -   | \  |
			// | CTRL  |  &   		|  :   |  ~   |  ^   |  --  |  HOME  |  4    |  5   |  6   | PGUP  |  ALT(\)    |
			// | SHIFT |  --   		|  --  |  --  |  --  |  --  |  END	 |  1    |  2   |  3   | PGDN  |  RET  |
			// | CTRL  |  -- 			|  --  |  --  |  --  | ____ |  LALT	 |  0		 |  . 	|	 =	 |  RET  | RIGHT
			bindings = <
				&kp TAB  		&kp PRCNT 	&kp EXCL		&kp AT 			&kp DLLR 	&trans	&kp GRAVE &kp N7  &kp N8  	&kp N9    	&kp MINUS &kp BSLH
				&kp LCTRL  	&kp AMPS		&kp COLON		&kp TILDE		&kp CARET &trans	&kp END  	&kp N4  &kp N5  	&kp N6    	&kp PG_UP &kp LA(BSLH)
				&kp LSHFT 	&trans    	&trans			&trans			&trans		&trans	&kp HOME  &kp N1  &kp N2  	&kp N3 			&kp PG_DN &kp LA(RET)
				&kp LCTRL  	&none 			&trans 		  &trans			&trans		&trans	&kp LALT	&kp N0	&kp DOT		&kp EQUAL 	&kp RET 	&kp RCTRL
			>;
		};

		raise {
			// -----------------------------------------------------------------------------------------
			// | trans |  F1	|  F2   |  F3   |  F4   |  --  |  --		|  (    |  )   |  {   |   }   | --  |
			// | trans |  F5	|  F6   |  F7   |  F8   |  --  |  --		|  LEFT | DOWN |  UP  | RIGHT | --  |
			// | trans |  F9	|  F10  |  F11  |  F12  |  --  |  --		|  --  	|  [   |  ]   | --    | --  |
			// | trans |  --	|  --   |  --   |  --   | ____ |  ____  |  --	 	|  --  |	 --	 | --		 | QWERTY
			bindings = <
				&trans &kp F1 	&kp F2		&kp F3 		&kp F4 		&kp N5	&trans &kp LPAR &kp RPAR  	&kp LBRC    &kp RBRC 	&trans
				&trans &kp F5		&kp F6		&kp F7		&kp F8 		&trans	&trans &kp LEFT &kp DOWN  	&kp UP    	&kp RIGHT &trans
				&trans &kp F9   &kp F10		&kp F11		&kp F12		&trans	&trans &kp N1  	&kp LBKT  	&kp RBKT 		&kp PG_DN &trans
				&trans &none 		&trans 		&trans		&trans		&trans	&trans &trans 	&trans 			&trans 			&trans 		&tog QWERTY
			>;
		};

		qwerty {
			bindings = <
				&kp ESC  		&kp Q    &kp W 			&kp E 		&kp R 		&kp T  					&kp Y   				&kp U  		&kp I     &kp O   &kp P    &kp BSPC
				&kp LCTRL  	&kp A    &kp S 			&kp D 		&kp F 		&kp G  					&kp H   				&kp J  		&kp K     &kp L   &kp SEMI &kp SQT
				&kp LSHFT 	&kp Z    &kp X 			&kp C 		&kp V 		&kp B  					&kp N   				&kp M  		&kp COMMA &kp DOT &kp BSLH &kp MINUS
				&kp LCTRL  	&kp LGUI &kp LSHFT  &kp LCTRL &kp LALT	&lt LOWER SPACE	&lt RAISE SPACE	&kp RET		&kp LEFT 	&kp DOWN 	&kp UP 		&kp RIGHT
			>;
		};

		ithree {
			// -----------------------------------------------------------------------------------------
			// | 	--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|	
			// | 	--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|	
			// | 	--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|	
			// | 	--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|		--		|	
			bindings = <
				&trans		&kp LA(N1)	&kp LA(N2)		&kp LA(N3)		&kp LA(N4)		&kp LA(N5)		&kp LA(N6)		&kp LA(N7)		&kp LA(N8)		&kp LA(N9)		&kp LA(N0)		&trans
				&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans
				&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans
				&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans
			>;
		};

		control {
			bindings = <
				&reset &bootloader &bt BT_CLR &bt BT_PRV &bt BT_NXT &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
			>;
		};
	};
};
